name: Services - Build

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        type: choice
        options:
          - 'dev'
          - 'test'
          - 'qa'
          - 'uat'
          - 'uat3'
          - 'feature1'
          - 'staging'
          - 'production'
      service:
        description: Service
        required: true
        type: choice
        options:
          - 'all'
          - 'access'
          - 'action'
          - 'admin'
          - 'auth'
          - 'common'
          - 'export'
          - 'files'
          - 'forms'
          - 'manager'
          - 'rounding'

  pull_request:
    types: [synchronize, closed, opened]
    branches:
      - main
    paths:
      - 'services/**'

jobs:
  detect-changed-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        if: github.event_name != 'workflow_dispatch'
        id: changes
        with:
          base: ${{ github.base_ref || 'dev' }}
          filters: |
            service1:
              - 'services/service1/**'
            service2:
              - 'services/service2/**'

      - name: Set Output
        id: changed-services
        run: |
          is_manual_run=$(echo ${{ contains(github.event_name, 'workflow_dispatch') }})
          CHANGES=${{ toJson(steps.changes.outputs.changes) }}

          if [ $is_manual_run == 'true' ]; then
            input_services=${{ github.event.inputs.service }}

            if [ $input_services == 'all' ]; then
              input_services="action,admin,auth,common,export,files,forms,manager,rounding"
            fi

            converted_inputs=$( jq -nc --arg input_services "$input_services" '$input_services | split(",")' )
            CHANGES=$converted_inputs
          fi

          echo "changes: $CHANGES"
          echo "changed_services=${CHANGES}" >> $GITHUB_ENV

    outputs:
      services: ${{ env.changed_services }}

  build:
    needs: [detect-changed-files]
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1 # Run jobs in matrix sequentially.
      fail-fast: false
      matrix:
        service: ${{ fromJson(needs.detect-changed-files.outputs.services) }}

    defaults:
      run:
        working-directory: ./services/${{ matrix.service }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node 16
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Install dependencies
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${{ secrets.LAUDIO_GITHUB_TOKEN }}

      - name: Build
        run: yarn test
